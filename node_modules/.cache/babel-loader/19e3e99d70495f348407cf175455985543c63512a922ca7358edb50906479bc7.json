{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\n// creem slice\n// creem asyncThunk action care ne da post pt subredit specific\nexport const fetchPostsbyTopic = createAsyncThunk('posts/getPostsbyTopic', async topic => {\n  const baseUrl = 'https://www.reddit.com';\n  try {\n    // topic va fi ce am ales eu apasand butonul\n    // imi va lua url asociat topicului: ex home: /r/Home/\n    const response = await fetch(`${baseUrl}${topic}.json`);\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      let posts = [];\n      //posts = jsonResponse.data.childrean.map((post)=> post.data);\n      posts = jsonResponse.data;\n      console.log(\"posts:\");\n      console.log(posts);\n      return posts;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: [],\n    isLoading: false,\n    hasError: false\n    //selectedTopic: '',\n  },\n\n  reducers: {\n    setSelectedTopic: (state, action) => {\n      state.selectedTopic = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchPostsbyTopic.pending]: (state, action) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [fetchPostsbyTopic.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.hasError = false;\n      state.posts.push(action.payload);\n    },\n    [fetchPostsbyTopic.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.hasError = true;\n    }\n  }\n});\n\n// creem selectors ca apoi sa folosim state si action in componenta(Posts.js) \n// acolo vom folosi useSelector(), useDispatch()\nexport const selectSelectedTopic = state => state.selectedTopic;\nexport const selectFilteredSelectedTopic = state => {\n  const selectedTopic = selectSelectedTopic(state);\n  return selectedTopic;\n};\nexport const selectPosts = state => state.posts;\nexport const selectFilteredPosts = state => {\n  const posts = selectPosts(state);\n  return posts;\n};\n\n// export action an reducer\nexport const {\n  setSelectedTopic\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchPostsbyTopic","topic","baseUrl","response","fetch","ok","jsonResponse","json","posts","data","console","log","error","postsSlice","name","initialState","isLoading","hasError","reducers","setSelectedTopic","state","action","selectedTopic","payload","extraReducers","pending","fulfilled","push","rejected","selectSelectedTopic","selectFilteredSelectedTopic","selectPosts","selectFilteredPosts","actions","reducer"],"sources":["C:/Users/urdan/reedit_myversion/src/features/postsSlice.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\n\r\n// creem slice\r\n// creem asyncThunk action care ne da post pt subredit specific\r\nexport const fetchPostsbyTopic = createAsyncThunk(\r\n  'posts/getPostsbyTopic',\r\n  async(topic) =>{\r\n    const baseUrl = 'https://www.reddit.com';\r\n\r\n    try{\r\n      // topic va fi ce am ales eu apasand butonul\r\n      // imi va lua url asociat topicului: ex home: /r/Home/\r\n      const response = await fetch(`${baseUrl}${topic}.json`);\r\n      if(response.ok){\r\n        const jsonResponse = await response.json();\r\n\r\n        let posts = [];\r\n        //posts = jsonResponse.data.childrean.map((post)=> post.data);\r\n        posts = jsonResponse.data;\r\n        console.log(\"posts:\");\r\n        console.log(posts);\r\n        return posts;\r\n        \r\n             \r\n      }\r\n    }catch (error){\r\n      console.log(error);\r\n    }\r\n  }\r\n)\r\n\r\n\r\nexport const postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState:{\r\n    posts: [],\r\n    isLoading: false,\r\n    hasError: false,\r\n    //selectedTopic: '',\r\n\r\n  },\r\n  reducers: {\r\n    setSelectedTopic: (state, action) =>{\r\n      state.selectedTopic = action.payload;\r\n    }\r\n  },\r\n  extraReducers:{\r\n    [fetchPostsbyTopic.pending]:(state, action)=>{\r\n      state.isLoading = true;\r\n      state.hasError = false;\r\n    },\r\n    [fetchPostsbyTopic.fulfilled]:(state, action)=>{\r\n      state.isLoading = false;\r\n      state.hasError = false;\r\n      state.posts.push(action.payload);\r\n    },\r\n    [fetchPostsbyTopic.rejected]:(state, action)=>{\r\n      state.isLoading = false;\r\n      state.hasError = true;\r\n    }\r\n  }\r\n\r\n})\r\n\r\n\r\n\r\n// creem selectors ca apoi sa folosim state si action in componenta(Posts.js) \r\n// acolo vom folosi useSelector(), useDispatch()\r\nexport const selectSelectedTopic =(state)=>state.selectedTopic;\r\n\r\nexport const selectFilteredSelectedTopic= (state) =>{\r\n  const selectedTopic = selectSelectedTopic(state);\r\n  return selectedTopic; \r\n}\r\n\r\n\r\nexport const selectPosts = (state)=>state.posts;\r\nexport const selectFilteredPosts = (state) =>{\r\n  const posts = selectPosts(state);\r\n  return posts;\r\n}\r\n\r\n// export action an reducer\r\nexport const {setSelectedTopic} = postsSlice.actions;\r\nexport default postsSlice.reducer;\r\n"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;;AAE9D;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAC/C,uBAAuB,EACvB,MAAMG,KAAK,IAAI;EACb,MAAMC,OAAO,GAAG,wBAAwB;EAExC,IAAG;IACD;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEF,OAAQ,GAAED,KAAM,OAAM,CAAC;IACvD,IAAGE,QAAQ,CAACE,EAAE,EAAC;MACb,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAE1C,IAAIC,KAAK,GAAG,EAAE;MACd;MACAA,KAAK,GAAGF,YAAY,CAACG,IAAI;MACzBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBD,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB,OAAOA,KAAK;IAGd;EACF,CAAC,QAAOI,KAAK,EAAC;IACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACpB;AACF,CACF,CAAC;AAGD,OAAO,MAAMC,UAAU,GAAGd,WAAW,CAAC;EACpCe,IAAI,EAAE,OAAO;EACbC,YAAY,EAAC;IACXP,KAAK,EAAE,EAAE;IACTQ,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;IACV;EAEF,CAAC;;EACDC,QAAQ,EAAE;IACRC,gBAAgB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAI;MAClCD,KAAK,CAACE,aAAa,GAAGD,MAAM,CAACE,OAAO;IACtC;EACF,CAAC;EACDC,aAAa,EAAC;IACZ,CAACxB,iBAAiB,CAACyB,OAAO,GAAE,CAACL,KAAK,EAAEC,MAAM,KAAG;MAC3CD,KAAK,CAACJ,SAAS,GAAG,IAAI;MACtBI,KAAK,CAACH,QAAQ,GAAG,KAAK;IACxB,CAAC;IACD,CAACjB,iBAAiB,CAAC0B,SAAS,GAAE,CAACN,KAAK,EAAEC,MAAM,KAAG;MAC7CD,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACH,QAAQ,GAAG,KAAK;MACtBG,KAAK,CAACZ,KAAK,CAACmB,IAAI,CAACN,MAAM,CAACE,OAAO,CAAC;IAClC,CAAC;IACD,CAACvB,iBAAiB,CAAC4B,QAAQ,GAAE,CAACR,KAAK,EAAEC,MAAM,KAAG;MAC5CD,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACH,QAAQ,GAAG,IAAI;IACvB;EACF;AAEF,CAAC,CAAC;;AAIF;AACA;AACA,OAAO,MAAMY,mBAAmB,GAAGT,KAAK,IAAGA,KAAK,CAACE,aAAa;AAE9D,OAAO,MAAMQ,2BAA2B,GAAGV,KAAK,IAAI;EAClD,MAAME,aAAa,GAAGO,mBAAmB,CAACT,KAAK,CAAC;EAChD,OAAOE,aAAa;AACtB,CAAC;AAGD,OAAO,MAAMS,WAAW,GAAIX,KAAK,IAAGA,KAAK,CAACZ,KAAK;AAC/C,OAAO,MAAMwB,mBAAmB,GAAIZ,KAAK,IAAI;EAC3C,MAAMZ,KAAK,GAAGuB,WAAW,CAACX,KAAK,CAAC;EAChC,OAAOZ,KAAK;AACd,CAAC;;AAED;AACA,OAAO,MAAM;EAACW;AAAgB,CAAC,GAAGN,UAAU,CAACoB,OAAO;AACpD,eAAepB,UAAU,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}