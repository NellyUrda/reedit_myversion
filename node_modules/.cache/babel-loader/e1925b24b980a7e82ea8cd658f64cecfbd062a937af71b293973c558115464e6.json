{"ast":null,"code":"import React,{useEffect}from\"react\";import styles from'./Posts.module.css';import{useSelector,useDispatch}from\"react-redux\";import{selectFilteredSelectedTopic,fetchPostsbyTopic,selectFilteredPosts,selectFilteredHasError,selectFilteredSearchTerm}from\"./postsSlice\";// react component that renders the posts by the topic selected\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Posts(){var dispatch=useDispatch();var hasError=useSelector(selectFilteredHasError);var topic=useSelector(selectFilteredSelectedTopic);var posts=useSelector(selectFilteredPosts);var searchTerm=useSelector(selectFilteredSearchTerm);useEffect(function(){dispatch(fetchPostsbyTopic(topic));},[topic]);if(hasError){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Failed to load posts\"})});}// render a message if no match search results\nif(posts.length===0){return/*#__PURE__*/_jsx(\"p\",{children:\"No results founded.\"});}return/*#__PURE__*/_jsx(\"div\",{children:posts.map(function(post){return/*#__PURE__*/_jsxs(\"div\",{className:styles.postContainer,children:[/*#__PURE__*/_jsx(\"h2\",{children:post.subreddit}),/*#__PURE__*/_jsxs(\"p\",{className:styles.author,children:[\"r/\",post.author]}),/*#__PURE__*/_jsx(\"h3\",{children:post.title}),/*#__PURE__*/_jsx(\"img\",{src:post.url})]},post.id);})});}export default Posts;","map":{"version":3,"names":["React","useEffect","styles","useSelector","useDispatch","selectFilteredSelectedTopic","fetchPostsbyTopic","selectFilteredPosts","selectFilteredHasError","selectFilteredSearchTerm","jsx","_jsx","jsxs","_jsxs","Posts","dispatch","hasError","topic","posts","searchTerm","children","length","map","post","className","postContainer","subreddit","author","title","src","url","id"],"sources":["C:/Users/urdan/reedit_myversion/src/features/Posts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styles from './Posts.module.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { \r\n     selectFilteredSelectedTopic,\r\n     fetchPostsbyTopic,\r\n     selectFilteredPosts,\r\n     selectFilteredHasError,\r\n     selectFilteredSearchTerm\r\n    } from \"./postsSlice\";\r\n\r\n// react component that renders the posts by the topic selected\r\nfunction Posts (){\r\n    const dispatch = useDispatch();\r\n    const hasError = useSelector(selectFilteredHasError);\r\n    const topic= useSelector(selectFilteredSelectedTopic);\r\n    let posts = useSelector(selectFilteredPosts);\r\n    const searchTerm = useSelector(selectFilteredSearchTerm);\r\n\r\n    useEffect(()=>{\r\n      dispatch(fetchPostsbyTopic(topic));   \r\n    },[topic]);\r\n    \r\n    \r\n    if(hasError){\r\n        return(\r\n            <div>\r\n                <h2>Failed to load posts</h2>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    // render a message if no match search results\r\n    if (posts.length === 0){\r\n        return(\r\n            <p>No results founded.</p>\r\n        )\r\n    }\r\n    return(\r\n       \r\n        <div >\r\n            {posts.map((post)=>(\r\n            <div key ={post.id} className={styles.postContainer}>\r\n                <h2>{post.subreddit}</h2>\r\n                <p className={styles.author}>r/{post.author}</p>\r\n                <h3>{post.title}</h3>\r\n                <img src={post.url}/>\r\n            </div>\r\n           ))}  \r\n        </div>\r\n   \r\n   \r\n       );\r\n   \r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,MAAM,KAAM,oBAAoB,CACvC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OACKC,2BAA2B,CAC3BC,iBAAiB,CACjBC,mBAAmB,CACnBC,sBAAsB,CACtBC,wBAAwB,KAClB,cAAc,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACb,GAAM,CAAAC,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAC9B,GAAM,CAAAY,QAAQ,CAAGb,WAAW,CAACK,sBAAsB,CAAC,CACpD,GAAM,CAAAS,KAAK,CAAEd,WAAW,CAACE,2BAA2B,CAAC,CACrD,GAAI,CAAAa,KAAK,CAAGf,WAAW,CAACI,mBAAmB,CAAC,CAC5C,GAAM,CAAAY,UAAU,CAAGhB,WAAW,CAACM,wBAAwB,CAAC,CAExDR,SAAS,CAAC,UAAI,CACZc,QAAQ,CAACT,iBAAiB,CAACW,KAAK,CAAC,CAAC,CACpC,CAAC,CAAC,CAACA,KAAK,CAAC,CAAC,CAGV,GAAGD,QAAQ,CAAC,CACR,mBACIL,IAAA,QAAAS,QAAA,cACIT,IAAA,OAAAS,QAAA,CAAI,sBAAoB,CAAI,CAAC,CAC5B,CAAC,CAEd,CAEA;AACA,GAAIF,KAAK,CAACG,MAAM,GAAK,CAAC,CAAC,CACnB,mBACIV,IAAA,MAAAS,QAAA,CAAG,qBAAmB,CAAG,CAAC,CAElC,CACA,mBAEIT,IAAA,QAAAS,QAAA,CACKF,KAAK,CAACI,GAAG,CAAC,SAACC,IAAI,qBAChBV,KAAA,QAAoBW,SAAS,CAAEtB,MAAM,CAACuB,aAAc,CAAAL,QAAA,eAChDT,IAAA,OAAAS,QAAA,CAAKG,IAAI,CAACG,SAAS,CAAK,CAAC,cACzBb,KAAA,MAAGW,SAAS,CAAEtB,MAAM,CAACyB,MAAO,CAAAP,QAAA,EAAC,IAAE,CAACG,IAAI,CAACI,MAAM,EAAI,CAAC,cAChDhB,IAAA,OAAAS,QAAA,CAAKG,IAAI,CAACK,KAAK,CAAK,CAAC,cACrBjB,IAAA,QAAKkB,GAAG,CAAEN,IAAI,CAACO,GAAI,CAAC,CAAC,GAJdP,IAAI,CAACQ,EAKX,CAAC,EACN,CAAC,CACA,CAAC,CAKd,CAEA,cAAe,CAAAjB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}