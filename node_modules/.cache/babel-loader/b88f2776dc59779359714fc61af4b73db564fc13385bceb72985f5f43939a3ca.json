{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\reedit_myversion\\\\src\\\\features\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styles from './Posts.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilteredSelectedTopic, fetchPostsbyTopic, selectFilteredPosts, selectFilteredHasError } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const dispatch = useDispatch();\n  let hasError = useSelector(selectFilteredHasError);\n  let stopic = useSelector(selectFilteredSelectedTopic);\n  const topic = '/r/Home/';\n  console.log(\" topic:\");\n  console.log(topic);\n\n  // cand apas pe buton se schimba state la selectedTopic\n  // in functie de aceasta variabila, useEffect afiseaza apoi posts\n  useEffect(() => {\n    dispatch(fetchPostsbyTopic(topic));\n    console.log(\"din effect\");\n  });\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Failed to load posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postsContainer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"e6uzQBwiUTEITS9YNpLVRU0ciOk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\n/*\r\n {posts.map((post)=>(\r\n            <div key ={post.id}>\r\n                <p>{post.subreddit}</p>\r\n                <p>{post.tile}</p>\r\n                <p>{post.author}</p>\r\n                <img src={post.url}/>\r\n            </div>\r\n           ))}  \r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","styles","useSelector","useDispatch","selectFilteredSelectedTopic","fetchPostsbyTopic","selectFilteredPosts","selectFilteredHasError","jsxDEV","_jsxDEV","Posts","_s","dispatch","hasError","stopic","topic","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","postsContainer","_c","$RefreshReg$"],"sources":["C:/Users/urdan/reedit_myversion/src/features/Posts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styles from './Posts.module.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { \r\n     selectFilteredSelectedTopic,\r\n     fetchPostsbyTopic,\r\n     selectFilteredPosts,\r\n     selectFilteredHasError,\r\n    } from \"./postsSlice\";\r\n\r\nfunction Posts (){\r\n    const dispatch = useDispatch();\r\n    let hasError = useSelector(selectFilteredHasError);\r\n    let stopic = useSelector(selectFilteredSelectedTopic);\r\n   const topic = '/r/Home/';\r\n   console.log(\" topic:\");\r\n   console.log(topic); \r\n   \r\n   // cand apas pe buton se schimba state la selectedTopic\r\n   // in functie de aceasta variabila, useEffect afiseaza apoi posts\r\n   useEffect(()=>{\r\n    dispatch(fetchPostsbyTopic(topic));   \r\n    console.log(\"din effect\");\r\n   });\r\n    \r\n    \r\n    if(hasError){\r\n        return(\r\n            <div>\r\n                <h2>Failed to load posts</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n       \r\n        <div className={styles.postsContainer}>\r\n         \r\n        </div>\r\n   \r\n   \r\n       );\r\n   \r\n}\r\n\r\nexport default Posts;\r\n/*\r\n {posts.map((post)=>(\r\n            <div key ={post.id}>\r\n                <p>{post.subreddit}</p>\r\n                <p>{post.tile}</p>\r\n                <p>{post.author}</p>\r\n                <img src={post.url}/>\r\n            </div>\r\n           ))}  \r\n\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACKC,2BAA2B,EAC3BC,iBAAiB,EACjBC,mBAAmB,EACnBC,sBAAsB,QAChB,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAIU,QAAQ,GAAGX,WAAW,CAACK,sBAAsB,CAAC;EAClD,IAAIO,MAAM,GAAGZ,WAAW,CAACE,2BAA2B,CAAC;EACtD,MAAMW,KAAK,GAAG,UAAU;EACxBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACtBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;EAElB;EACA;EACAf,SAAS,CAAC,MAAI;IACbY,QAAQ,CAACP,iBAAiB,CAACU,KAAK,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC1B,CAAC,CAAC;EAGD,IAAGJ,QAAQ,EAAC;IACR,oBACIJ,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAAS,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAEd;EACA,oBAEIb,OAAA;IAAKc,SAAS,EAAEtB,MAAM,CAACuB;EAAe;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAKd;AAACX,EAAA,CAhCQD,KAAK;EAAA,QACOP,WAAW,EACbD,WAAW,EACbA,WAAW;AAAA;AAAAuB,EAAA,GAHnBf,KAAK;AAkCd,eAAeA,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}