{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styles from './Posts.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\n//import { fetchPostsbyTopic, selectFilteredPosts, selectFilteredSelectedTopic } from \"./postsSlice\";\nimport { selectFilteredSelectedTopic, selectFilteredPosts, fetchPostsbyTopic, selectSelectedTopic } from \"./postsSlice\";\nfunction Posts() {\n  _s();\n  const dispatch = useDispatch();\n  let posts = useSelector(selectFilteredPosts);\n  console.log(\"al posts:\");\n  console.log(posts);\n  let selectedTopic = useSelector(selectFilteredSelectedTopic);\n  console.log(\"selected topic:\");\n  console.log(selectedTopic);\n\n  // cand apas pe buton se schimba state la selectedTopic\n  // in functie de aceasta variabila, useEffect afiseaza apoi posts\n\n  useEffect(() => {\n    dispatch(fetchPostsbyTopic(selectedTopic));\n  }, [selectedTopic]);\n  if (posts.length !== 0) {}\n}\n_s(Posts, \"2aczC7N572hRO5nV1+MMXOIDChk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\n\n/*\r\n {posts.map((post)=>(\r\n                <div key={post.id}>\r\n                    <p>{post.author}</p>\r\n                </div>\r\n              ))}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","styles","useSelector","useDispatch","selectFilteredSelectedTopic","selectFilteredPosts","fetchPostsbyTopic","selectSelectedTopic","Posts","_s","dispatch","posts","console","log","selectedTopic","length","_c","$RefreshReg$"],"sources":["C:/Users/urdan/reedit_myversion/src/features/Posts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styles from './Posts.module.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//import { fetchPostsbyTopic, selectFilteredPosts, selectFilteredSelectedTopic } from \"./postsSlice\";\r\nimport { selectFilteredSelectedTopic, selectFilteredPosts, fetchPostsbyTopic, selectSelectedTopic } from \"./postsSlice\";\r\n\r\nfunction Posts (){\r\n   \r\n   const dispatch = useDispatch();\r\n   let posts = useSelector(selectFilteredPosts);\r\n   console.log(\"al posts:\");\r\n   console.log(posts);\r\n   \r\n   let selectedTopic = useSelector(selectFilteredSelectedTopic);\r\n   console.log(\"selected topic:\");\r\n   console.log(selectedTopic); \r\n  \r\n \r\n   // cand apas pe buton se schimba state la selectedTopic\r\n   // in functie de aceasta variabila, useEffect afiseaza apoi posts\r\n\r\n   useEffect(()=>{\r\n    dispatch(fetchPostsbyTopic(selectedTopic));\r\n   },[selectedTopic])\r\n   \r\n    \r\n       \r\n if(posts.length !==0){\r\n\r\n }\r\n      \r\n\r\n   \r\n    \r\n\r\n   \r\n}\r\n\r\nexport default Posts;\r\n\r\n\r\n/*\r\n {posts.map((post)=>(\r\n                <div key={post.id}>\r\n                    <p>{post.author}</p>\r\n                </div>\r\n              ))}\r\n*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,2BAA2B,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,cAAc;AAEvH,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,IAAIQ,KAAK,GAAGT,WAAW,CAACG,mBAAmB,CAAC;EAC5CO,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,IAAIG,aAAa,GAAGZ,WAAW,CAACE,2BAA2B,CAAC;EAC5DQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9BD,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;;EAG1B;EACA;;EAEAd,SAAS,CAAC,MAAI;IACbU,QAAQ,CAACJ,iBAAiB,CAACQ,aAAa,CAAC,CAAC;EAC3C,CAAC,EAAC,CAACA,aAAa,CAAC,CAAC;EAIpB,IAAGH,KAAK,CAACI,MAAM,KAAI,CAAC,EAAC,CAErB;AAOD;AAACN,EAAA,CA9BQD,KAAK;EAAA,QAEML,WAAW,EAChBD,WAAW,EAIHA,WAAW;AAAA;AAAAc,EAAA,GAPzBR,KAAK;AAgCd,eAAeA,KAAK;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}