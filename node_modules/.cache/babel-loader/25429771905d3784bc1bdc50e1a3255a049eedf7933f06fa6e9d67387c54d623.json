{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\reedit_myversion\\\\src\\\\features\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styles from './Posts.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\n//import { fetchPostsbyTopic, selectFilteredPosts, selectFilteredSelectedTopic } from \"./postsSlice\";\nimport { selectFilteredSelectedTopic, selectFilteredPosts, fetchPostsbyTopic, selectSelectedTopic } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const dispatch = useDispatch();\n  let posts = [];\n  posts = useSelector(selectFilteredPosts);\n  console.log(\"al posts:\");\n  console.log(posts);\n  /*\r\n  let selectedTopic = useSelector(selectFilteredSelectedTopic);\r\n  console.log(\"selected topic:\");\r\n  console.log(selectedTopic); \r\n  let posts = useSelector(selectFilteredPosts);\r\n  console.log(\"Posts:\");\r\n  console.log(posts);\r\n  */\n  // cand apas pe buton se schimba state la selectedTopic\n  // in functie de aceasta variabila, useEffect afiseaza apoi posts\n  /*\r\n  useEffect(()=>{\r\n   dispatch(fetchPostsbyTopic('/r/Home/'));\r\n  },[dispatch])\r\n  */\n\n  if (posts.length() !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postsContainer,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Posts, \"HHF1nSYu29LFRF2DQMTWH8IFW6M=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","styles","useSelector","useDispatch","selectFilteredSelectedTopic","selectFilteredPosts","fetchPostsbyTopic","selectSelectedTopic","jsxDEV","_jsxDEV","Posts","_s","dispatch","posts","console","log","length","className","postsContainer","children","map","post","author","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/urdan/reedit_myversion/src/features/Posts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styles from './Posts.module.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//import { fetchPostsbyTopic, selectFilteredPosts, selectFilteredSelectedTopic } from \"./postsSlice\";\r\nimport { selectFilteredSelectedTopic, selectFilteredPosts, fetchPostsbyTopic, selectSelectedTopic } from \"./postsSlice\";\r\n\r\nfunction Posts (){\r\n   \r\n   const dispatch = useDispatch();\r\n   let posts = [];\r\n    posts = useSelector(selectFilteredPosts);\r\n   console.log(\"al posts:\");\r\n   console.log(posts);\r\n   /*\r\n   let selectedTopic = useSelector(selectFilteredSelectedTopic);\r\n   console.log(\"selected topic:\");\r\n   console.log(selectedTopic); \r\n   let posts = useSelector(selectFilteredPosts);\r\n   console.log(\"Posts:\");\r\n   console.log(posts);\r\n\r\n */\r\n   // cand apas pe buton se schimba state la selectedTopic\r\n   // in functie de aceasta variabila, useEffect afiseaza apoi posts\r\n   /*\r\n   useEffect(()=>{\r\n    dispatch(fetchPostsbyTopic('/r/Home/'));\r\n   },[dispatch])\r\n   */\r\n    \r\n   \r\n    if(posts.length()!==0){\r\n        return(\r\n            <div className={styles.postsContainer}>\r\n              {posts.map((post)=>(\r\n                <div key={post.id}>\r\n                    <p>{post.author}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n           );\r\n\r\n    }\r\n    \r\n\r\n   \r\n}\r\n\r\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,2BAA2B,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExH,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAIU,KAAK,GAAG,EAAE;EACbA,KAAK,GAAGX,WAAW,CAACG,mBAAmB,CAAC;EACzCS,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;EAEG;EACA;EACA;AACH;AACA;AACA;AACA;;EAGI,IAAGA,KAAK,CAACG,MAAM,CAAC,CAAC,KAAG,CAAC,EAAC;IAClB,oBACIP,OAAA;MAAKQ,SAAS,EAAEhB,MAAM,CAACiB,cAAe;MAAAC,QAAA,EACnCN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdZ,OAAA;QAAAU,QAAA,eACIV,OAAA;UAAAU,QAAA,EAAIE,IAAI,CAACC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADdL,IAAI,CAACM,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAGd;AAIJ;AAACf,EAAA,CAxCQD,KAAK;EAAA,QAEMP,WAAW,EAEnBD,WAAW;AAAA;AAAA0B,EAAA,GAJdlB,KAAK;AA0Cd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}