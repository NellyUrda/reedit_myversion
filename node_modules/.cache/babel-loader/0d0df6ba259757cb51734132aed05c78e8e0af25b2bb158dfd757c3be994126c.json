{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\reedit_myversion\\\\src\\\\features\\\\AllTopics.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from './AllTopics.module.css';\n// aceste 2 functii le folosim sa accesam state si actions din store\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilteredAllTopics } from \"./allTopicsSlice\";\nimport { addPost, fetchPostsbyTopic, setSelectedTopic } from \"./postsSlice\";\n\n// aici afisam toate topics fetched by reedit.com\n// cand apasam butonul ce reprezinta un topic, sa imi dispatch action fetchPostsbyTopic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllTopics() {\n  _s();\n  const dispatch = useDispatch();\n  const allTopics = useSelector(selectFilteredAllTopics);\n  const {\n    isLoading\n  } = useSelector(state => state.allTopics);\n  console.log(\"all topics:\");\n  console.log(allTopics);\n  const setSelectedTopic = useSelector();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.topicsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allTopics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => dispatch(setSelectedTopic(topic.url)),\n          children: topic.display_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 6\n  }, this);\n}\n_s(AllTopics, \"Tk0mw++IqfWFhpxDK+1kPgKYLTU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = AllTopics;\nexport default AllTopics;\nvar _c;\n$RefreshReg$(_c, \"AllTopics\");","map":{"version":3,"names":["React","styles","useSelector","useDispatch","selectFilteredAllTopics","addPost","fetchPostsbyTopic","setSelectedTopic","jsxDEV","_jsxDEV","AllTopics","_s","dispatch","allTopics","isLoading","state","console","log","className","topicsContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","map","topic","type","onClick","url","display_name","id","_c","$RefreshReg$"],"sources":["C:/Users/urdan/reedit_myversion/src/features/AllTopics.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from './AllTopics.module.css'\r\n// aceste 2 functii le folosim sa accesam state si actions din store\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFilteredAllTopics } from \"./allTopicsSlice\";\r\nimport { addPost, fetchPostsbyTopic, setSelectedTopic } from \"./postsSlice\";\r\n\r\n\r\n// aici afisam toate topics fetched by reedit.com\r\n// cand apasam butonul ce reprezinta un topic, sa imi dispatch action fetchPostsbyTopic\r\nfunction AllTopics (){\r\n    const dispatch = useDispatch();\r\n    const allTopics = useSelector(selectFilteredAllTopics);\r\n    const { isLoading } = useSelector((state) => state.allTopics);\r\n    console.log(\"all topics:\");\r\n    console.log(allTopics);\r\n    const setSelectedTopic = useSelector()\r\n\r\n\r\n    return(\r\n     <div className={styles.topicsContainer}>\r\n        <h2>Topics</h2>\r\n        <ul>\r\n            {allTopics.map((topic)=>(\r\n                 <li key={topic.id}>\r\n                    <button type=\"button\" onClick={()=>dispatch(setSelectedTopic(topic.url))}>\r\n                        {topic.display_name}\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n     </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AllTopics;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAC3C;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,uBAAuB,QAAQ,kBAAkB;AAC1D,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,gBAAgB,QAAQ,cAAc;;AAG3E;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,SAAS,GAAGX,WAAW,CAACE,uBAAuB,CAAC;EACtD,MAAM;IAAEU;EAAU,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACF,SAAS,CAAC;EAC7DG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1BD,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;EACtB,MAAMN,gBAAgB,GAAGL,WAAW,CAAC,CAAC;EAGtC,oBACCO,OAAA;IAAKS,SAAS,EAAEjB,MAAM,CAACkB,eAAgB;IAAAC,QAAA,gBACpCX,OAAA;MAAAW,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACff,OAAA;MAAAW,QAAA,EACKP,SAAS,CAACY,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAAW,QAAA,eACGX,OAAA;UAAQkB,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAIhB,QAAQ,CAACL,gBAAgB,CAACmB,KAAK,CAACG,GAAG,CAAC,CAAE;UAAAT,QAAA,EACpEM,KAAK,CAACI;QAAY;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC,GAHHE,KAAK,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGX;AAACb,EAAA,CAxBQD,SAAS;EAAA,QACGP,WAAW,EACVD,WAAW,EACPA,WAAW,EAGRA,WAAW;AAAA;AAAA8B,EAAA,GAN/BtB,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}