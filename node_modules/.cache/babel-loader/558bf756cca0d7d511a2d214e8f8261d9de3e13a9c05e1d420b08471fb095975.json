{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\reedit_myversion\\\\src\\\\features\\\\Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styles from './Posts.module.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilteredSelectedTopic, fetchPostsbyTopic, selectFilteredPosts, selectFilteredHasError, selectFilteredSearchTerm } from \"./postsSlice\";\n\n// react componetn that displays the posts by thetopic selected\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const dispatch = useDispatch();\n  const hasError = useSelector(selectFilteredHasError);\n  const topic = useSelector(selectFilteredSelectedTopic);\n  let posts = useSelector(selectFilteredPosts);\n  const searchTerm = useSelector(selectFilteredSearchTerm);\n\n  // cand apas pe buton se schimba state la selectedTopic\n  // in functie de aceasta variabila, useEffect afiseaza apoi posts\n  useEffect(() => {\n    dispatch(fetchPostsbyTopic(topic));\n  }, [topic]);\n  if (hasError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Failed to load posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  // daca nu a gasit nici un match pt search, deci post array length = 0\n  if (posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results founded.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.subreddit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.author,\n        children: [\"r/\", post.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"FUFv6x8Gxid85L+rzWKElHJKyKw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","styles","useSelector","useDispatch","selectFilteredSelectedTopic","fetchPostsbyTopic","selectFilteredPosts","selectFilteredHasError","selectFilteredSearchTerm","jsxDEV","_jsxDEV","Posts","_s","dispatch","hasError","topic","posts","searchTerm","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","className","postContainer","subreddit","author","title","src","url","id","_c","$RefreshReg$"],"sources":["C:/Users/urdan/reedit_myversion/src/features/Posts.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styles from './Posts.module.css'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { \r\n     selectFilteredSelectedTopic,\r\n     fetchPostsbyTopic,\r\n     selectFilteredPosts,\r\n     selectFilteredHasError,\r\n     selectFilteredSearchTerm\r\n    } from \"./postsSlice\";\r\n\r\n\r\n// react componetn that displays the posts by thetopic selected\r\nfunction Posts (){\r\n    const dispatch = useDispatch();\r\n    const hasError = useSelector(selectFilteredHasError);\r\n    const topic= useSelector(selectFilteredSelectedTopic);\r\n    let posts = useSelector(selectFilteredPosts);\r\n    const searchTerm = useSelector(selectFilteredSearchTerm);\r\n\r\n   // cand apas pe buton se schimba state la selectedTopic\r\n   // in functie de aceasta variabila, useEffect afiseaza apoi posts\r\n    useEffect(()=>{\r\n      dispatch(fetchPostsbyTopic(topic));   \r\n    },[topic]);\r\n    \r\n    \r\n    if(hasError){\r\n        return(\r\n            <div>\r\n                <h2>Failed to load posts</h2>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    // daca nu a gasit nici un match pt search, deci post array length = 0\r\n    if (posts.length === 0){\r\n        return(\r\n            <p>No results founded.</p>\r\n        )\r\n    }\r\n    return(\r\n       \r\n        <div >\r\n            {posts.map((post)=>(\r\n            <div key ={post.id} className={styles.postContainer}>\r\n                <h2>{post.subreddit}</h2>\r\n                <p className={styles.author}>r/{post.author}</p>\r\n                <h3>{post.title}</h3>\r\n                <img src={post.url}/>\r\n            </div>\r\n           ))}  \r\n        </div>\r\n   \r\n   \r\n       );\r\n   \r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACKC,2BAA2B,EAC3BC,iBAAiB,EACjBC,mBAAmB,EACnBC,sBAAsB,EACtBC,wBAAwB,QAClB,cAAc;;AAGzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGZ,WAAW,CAACK,sBAAsB,CAAC;EACpD,MAAMQ,KAAK,GAAEb,WAAW,CAACE,2BAA2B,CAAC;EACrD,IAAIY,KAAK,GAAGd,WAAW,CAACI,mBAAmB,CAAC;EAC5C,MAAMW,UAAU,GAAGf,WAAW,CAACM,wBAAwB,CAAC;;EAEzD;EACA;EACCR,SAAS,CAAC,MAAI;IACZa,QAAQ,CAACR,iBAAiB,CAACU,KAAK,CAAC,CAAC;EACpC,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAGV,IAAGD,QAAQ,EAAC;IACR,oBACIJ,OAAA;MAAAQ,QAAA,eACIR,OAAA;QAAAQ,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAEd;;EAEA;EACA,IAAIN,KAAK,CAACO,MAAM,KAAK,CAAC,EAAC;IACnB,oBACIb,OAAA;MAAAQ,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAElC;EACA,oBAEIZ,OAAA;IAAAQ,QAAA,EACKF,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBAChBf,OAAA;MAAoBgB,SAAS,EAAEzB,MAAM,CAAC0B,aAAc;MAAAT,QAAA,gBAChDR,OAAA;QAAAQ,QAAA,EAAKO,IAAI,CAACG;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzBZ,OAAA;QAAGgB,SAAS,EAAEzB,MAAM,CAAC4B,MAAO;QAAAX,QAAA,GAAC,IAAE,EAACO,IAAI,CAACI,MAAM;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDZ,OAAA;QAAAQ,QAAA,EAAKO,IAAI,CAACK;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBZ,OAAA;QAAKqB,GAAG,EAAEN,IAAI,CAACO;MAAI;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,GAJdG,IAAI,CAACQ,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAKd;AAACV,EAAA,CA5CQD,KAAK;EAAA,QACOR,WAAW,EACXD,WAAW,EACfA,WAAW,EACZA,WAAW,EACJA,WAAW;AAAA;AAAAgC,EAAA,GALzBvB,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}