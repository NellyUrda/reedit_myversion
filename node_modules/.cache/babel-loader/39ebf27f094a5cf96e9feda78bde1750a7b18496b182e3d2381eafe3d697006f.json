{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// creem slice\n// creem asyncThunk pt request la pagina \nexport const fetchTopics = createAsyncThunk('allTopics/fetchTopics', async () => {\n  // async func ce face a reguest la reedit, intoarce lista de topics\n});\nexport const allTopicsSlice = createSlice({\n  name: 'allTopics',\n  initialState: {\n    topics: [],\n    isLoading: false,\n    hasError: false\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchTopics.pending]: (state, action) => {\n      state.isLoading = true;\n      state.hasError = false;\n    },\n    [fetchTopics.fulfilled]: (state, action) => {\n      state.topics = action.payload;\n      state.isLoading = false;\n      state.hasError = false;\n    },\n    [fetchTopics.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.hasError = true;\n    }\n  }\n});\n\n// creem selectors ca apoi sa folosim state si action in componenta(AllTopics.js) \n// acolo vom folosi useSelector(), useDispatch()\n//export const selectAllTopics =(state)=>state.allTopics.topics;\nexport const selectFilteredAllTopics = state => {\n  const topics = selectAllTopics(state);\n  return topics;\n};\nexport default allTopicsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTopics","allTopicsSlice","name","initialState","topics","isLoading","hasError","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","selectFilteredAllTopics","selectAllTopics","reducer"],"sources":["C:/Users/urdan/reedit_myversion/src/features/allTopicsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// creem slice\r\n// creem asyncThunk pt request la pagina \r\nexport const fetchTopics = createAsyncThunk(\r\n    'allTopics/fetchTopics', \r\n    async () =>{\r\n        // async func ce face a reguest la reedit, intoarce lista de topics\r\n    }\r\n)\r\n\r\n\r\nexport const allTopicsSlice = createSlice({\r\n    name: 'allTopics',\r\n    initialState:{\r\n        topics: [],\r\n        isLoading: false,\r\n        hasError: false\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchTopics.pending]:(state, action) =>{\r\n            state.isLoading = true;\r\n            state.hasError = false;\r\n        },\r\n        [fetchTopics.fulfilled]:(state, action)=>{\r\n            state.topics= action.payload;\r\n            state.isLoading= false;\r\n            state.hasError = false;\r\n        },\r\n        [fetchTopics.rejected]:(state, action)=>{\r\n            state.isLoading = false;\r\n            state.hasError = true;\r\n        }\r\n\r\n    }\r\n\r\n});\r\n\r\n\r\n// creem selectors ca apoi sa folosim state si action in componenta(AllTopics.js) \r\n// acolo vom folosi useSelector(), useDispatch()\r\n//export const selectAllTopics =(state)=>state.allTopics.topics;\r\nexport const selectFilteredAllTopics =(state)=>{\r\n    const topics = selectAllTopics(state);\r\n    return topics;\r\n}\r\n\r\nexport default allTopicsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA;AACA,OAAO,MAAMC,WAAW,GAAGD,gBAAgB,CACvC,uBAAuB,EACvB,YAAW;EACP;AAAA,CAER,CAAC;AAGD,OAAO,MAAME,cAAc,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAC;IACTC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACX,CAACR,WAAW,CAACS,OAAO,GAAE,CAACC,KAAK,EAAEC,MAAM,KAAI;MACpCD,KAAK,CAACL,SAAS,GAAG,IAAI;MACtBK,KAAK,CAACJ,QAAQ,GAAG,KAAK;IAC1B,CAAC;IACD,CAACN,WAAW,CAACY,SAAS,GAAE,CAACF,KAAK,EAAEC,MAAM,KAAG;MACrCD,KAAK,CAACN,MAAM,GAAEO,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACL,SAAS,GAAE,KAAK;MACtBK,KAAK,CAACJ,QAAQ,GAAG,KAAK;IAC1B,CAAC;IACD,CAACN,WAAW,CAACc,QAAQ,GAAE,CAACJ,KAAK,EAAEC,MAAM,KAAG;MACpCD,KAAK,CAACL,SAAS,GAAG,KAAK;MACvBK,KAAK,CAACJ,QAAQ,GAAG,IAAI;IACzB;EAEJ;AAEJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA,OAAO,MAAMS,uBAAuB,GAAGL,KAAK,IAAG;EAC3C,MAAMN,MAAM,GAAGY,eAAe,CAACN,KAAK,CAAC;EACrC,OAAON,MAAM;AACjB,CAAC;AAED,eAAeH,cAAc,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}